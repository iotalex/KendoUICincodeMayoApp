{"version":3,"file":"kendo.validator.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendovalidator","js","this","$","undefined$1","kendo","window","Widget","ui","NS","INVALIDMSG","invalidMsgRegExp","RegExp","INVALIDINPUT","VALIDINPUT","VALIDATIONSUMMARY","INVALIDLABEL","MESSAGEBOX","ARIAINVALID","emailRegExp","urlRegExp","INPUTSELECTOR","CHECKBOXSELECTOR","NUMBERINPUTSELECTOR","BLUR","NAME","FORM","NOVALIDATE","VALIDATE","CHANGE","VALIDATE_INPUT","patternMatcher","value","pattern","test","matcher","input","selector","val","filter","length","hasAttribute","name","attributes","parseHtml","text","parseHTML","searchForMessageContainer","elements","fieldName","element","containers","idx","className","getAttribute","attr","add","isLabelFor","label","nodeName","validator","rules","messages","allowSubmit","noop","validateOnInit","SUMMARYTEMPLATE","errors","result","i","field","message","Validator","extend","init","options","that","resolved","resolvers","ruleResolvers","resolve","resolveRules","validateAttributeSelector","fn","call","_errorTemplate","template","errorTemplate","_summaryTemplate","validationSummary","is","_inputSelector","_checkboxSelector","_errors","_attachEvents","_isValidated","_validateOnInit","validate","events","required","min","max","step","email","url","date","dateCompare","captcha","noNameCheckbox","quote","indexOf","namedCheckbox","find","checkbox","radio","parseFloat","raise","decimals","split","Math","pow","floor","parseDate","widgetInstance","isValidated","isValid","data","getCaptchaId","_validating","done","_checkElement","fail","error","console","warn","removeData","validateOnBlur","_allowSubmit","destroy","off","_submit","e","stopPropagation","stopImmediatePropagation","preventDefault","state","validateInput","trigger","on","bind","inputs","invalid","eq","showValidationSummary","valid","_checkValidity","lbl","_findMessageContainer","next","addClass","messageText","_extractMessage","key","messageLabel","replace","wasValid","isInputInner","inputWrapper","parent","removeAttr","hasClass","closest","lblId","_decorateMessageContainer","replaceWith","parentElement","get","nextElement","prevElement","prev","wrapper","insertAfter","removeClass","_inputWrapper","toggleClass","inputWrap","inputLabel","_inputLabel","errorId","_associateMessageContainer","hideMessages","_disassociateMessageContainers","reset","labels","hideValidationSummary","locators","messageLocators","getElementsByTagName","locate","container","decorate","ruleKey","nonDefaultMessage","customMessage","prototype","isFunction","format","rule","results","push","setOptions","deepExtend","_setEvents","_getInputNames","sorted","nextFocusable","getWidgetFocusableElement","toggleAttribute","addBack","_errorsByName","inputNames","_renderSummary","insertBefore","join","_summaryClick","link","target","errorsList","summary","html","plugin","jQuery"],"sources":["kendo.validator.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendovalidator = global.kendovalidator || {}, global.kendovalidator.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"validator\",\n        name: \"Validator\",\n        category: \"web\",\n        description: \"The Validator offers an easy way to do a client-side form validation.\",\n        depends: [ \"core\" ]\n    };\n\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            NS = \".kendoValidator\",\n            INVALIDMSG = \"k-invalid-msg\",\n            invalidMsgRegExp = new RegExp(INVALIDMSG,'i'),\n            INVALIDINPUT = \"k-invalid\",\n            VALIDINPUT = \"k-valid\",\n            VALIDATIONSUMMARY = \"k-validation-summary\",\n            INVALIDLABEL = \"k-text-error\",\n            MESSAGEBOX = \"k-messagebox k-messagebox-error\",\n            INPUTINNER = \".k-input-inner\",\n            INPUTWRAPPER = \".k-input\",\n            ARIAINVALID = \"aria-invalid\",\n            ARIADESCRIBEDBY = \"aria-describedby\",\n            emailRegExp = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/i,\n            urlRegExp = /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i,\n            INPUTSELECTOR = \":input:not(:button,[type=submit],[type=reset],[disabled],[readonly])\",\n            CHECKBOXSELECTOR = \":checkbox:not([disabled],[readonly])\",\n            NUMBERINPUTSELECTOR = \"[type=number],[type=range]\",\n            BLUR = \"blur\",\n            NAME = \"name\",\n            FORM = \"form\",\n            NOVALIDATE = \"novalidate\",\n            //events\n            VALIDATE = \"validate\",\n            CHANGE = \"change\",\n            VALIDATE_INPUT = \"validateInput\",\n\n            patternMatcher = function(value, pattern) {\n                if (typeof pattern === \"string\") {\n                    pattern = new RegExp('^(?:' + pattern + ')$');\n                }\n                return pattern.test(value);\n            },\n            matcher = function(input, selector, pattern) {\n                var value = input.val();\n\n                if (input.filter(selector).length && value !== \"\") {\n                    return patternMatcher(value, pattern);\n                }\n                return true;\n            },\n            hasAttribute = function(input, name) {\n                if (input.length) {\n                    return input[0].attributes[name] != null;\n                }\n                return false;\n            };\n\n        if (!kendo.ui.validator) {\n            kendo.ui.validator = { rules: {}, messages: {}, allowSubmit: $.noop, validateOnInit: $.noop };\n        }\n\n        function resolveRules(element) {\n            var resolvers = kendo.ui.validator.ruleResolvers || {},\n                rules = {},\n                name;\n\n            for (name in resolvers) {\n                $.extend(true, rules, resolvers[name].resolve(element));\n            }\n            return rules;\n        }\n\n        function decode(value) {\n            return value.replace(/&amp/g, '&amp;')\n                .replace(/&quot;/g, '\"')\n                .replace(/&#39;/g, \"'\")\n                .replace(/&lt;/g, '<')\n                .replace(/&gt;/g, '>');\n        }\n\n        function numberOfDecimalDigits(value) {\n            value = (value + \"\").split('.');\n            if (value.length > 1) {\n                return value[1].length;\n            }\n            return 0;\n        }\n\n        function parseHtml(text) {\n            if ($.parseHTML) {\n                return $($.parseHTML(text));\n            }\n            return $(text);\n        }\n\n        function searchForMessageContainer(elements, fieldName) {\n            var containers = $(),\n                element,\n                attr;\n\n            for (var idx = 0, length = elements.length; idx < length; idx++) {\n                element = elements[idx];\n                if (invalidMsgRegExp.test(element.className)) {\n                    attr = element.getAttribute(kendo.attr(\"for\"));\n                    if (attr === fieldName) {\n                        containers = containers.add(element);\n                    }\n                }\n            }\n            return containers;\n        }\n\n        function isLabelFor(label, element) {\n            if (!label) {\n                return false;\n            }\n            if (typeof label.nodeName !== 'string' || label.nodeName !== 'LABEL') {\n                return false;\n            }\n            if (typeof label.getAttribute('for') !== 'string' || typeof element.getAttribute('id') !== 'string') {\n                return false;\n            }\n            if (label.getAttribute('for') !== element.getAttribute('id')) {\n                return false;\n            }\n\n            return true;\n        }\n\n        var SUMMARYTEMPLATE = ({ errors }) => {\n            let result = '<ul>';\n            for (var i = 0; i < errors.length; i += 1) {\n                result += `<li><a data-field=\"${errors[i].field}\" href=\"#\">${errors[i].message}</a></li>`;\n            }\n\n            result += '</ul>';\n            return result;\n        };\n\n        var Validator = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    resolved = resolveRules(element),\n                    validateAttributeSelector = \"[\" + kendo.attr(\"validate\") + \"!=false]\";\n\n                options = options || {};\n\n                options.rules = $.extend({}, kendo.ui.validator.rules, resolved.rules, options.rules);\n                options.messages = $.extend({}, kendo.ui.validator.messages, resolved.messages, options.messages);\n\n                Widget.fn.init.call(that, element, options);\n\n                that._errorTemplate = kendo.template(that.options.errorTemplate);\n                that._summaryTemplate = kendo.template(that.options.validationSummary.template || SUMMARYTEMPLATE);\n\n                if (that.element.is(FORM)) {\n                    that.element.attr(NOVALIDATE, NOVALIDATE);\n                }\n\n                that._inputSelector = INPUTSELECTOR + validateAttributeSelector;\n                that._checkboxSelector = CHECKBOXSELECTOR + validateAttributeSelector;\n\n                that._errors = {};\n                that._attachEvents();\n                that._isValidated = false;\n\n                if (that._validateOnInit()) {\n                    that.validate();\n                }\n            },\n\n            events: [ VALIDATE, CHANGE, VALIDATE_INPUT ],\n\n            options: {\n                name: \"Validator\",\n                errorTemplate: ({ message }) => `<span class=\"k-form-error\">${message}</span>`,\n                messages: {\n                    required: \"{0} is required\",\n                    pattern: \"{0} is not valid\",\n                    min: \"{0} should be greater than or equal to {1}\",\n                    max: \"{0} should be smaller than or equal to {1}\",\n                    step: \"{0} is not valid\",\n                    email: \"{0} is not valid email\",\n                    url: \"{0} is not valid URL\",\n                    date: \"{0} is not valid date\",\n                    dateCompare: \"End date should be greater than or equal to the start date\",\n                    captcha: \"The text you entered doesn't match the image.\"\n                },\n                rules: {\n                    required: function(input) {\n                        var noNameCheckbox = !input.attr(\"name\") && !input.is(\":checked\"),\n                            name = input.attr(\"name\"),\n                            quote = !!name && name.indexOf(\"'\") > -1 ? '\\\"' : \"'\",\n                            namedCheckbox = input.attr(\"name\") && !this.element.find(\"input[name=\" + quote + input.attr(\"name\") + quote + \"]:checked\").length,\n                            checkbox = input.filter(\"[type=checkbox]\").length && (noNameCheckbox || namedCheckbox),\n                            radio = input.filter(\"[type=radio]\").length && !this.element.find(\"input[name=\" + quote + input.attr(\"name\") + quote + \"]:checked\").length,\n                            value = input.val();\n\n                        return !(hasAttribute(input, \"required\") && (!value || value === \"\" || value.length === 0 || checkbox || radio));\n                    },\n                    pattern: function(input) {\n                        if (input.filter(\"[type=text],[type=email],[type=url],[type=tel],[type=search],[type=password]\").filter(\"[pattern]\").length && input.val() !== \"\") {\n                            return patternMatcher(input.val(), input.attr(\"pattern\"));\n                        }\n                        return true;\n                    },\n                    min: function(input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[min]\").length && input.val() !== \"\") {\n                            var min = parseFloat(input.attr(\"min\")) || 0,\n                                val = kendo.parseFloat(input.val());\n\n                            return min <= val;\n                        }\n                        return true;\n                    },\n                    max: function(input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[max]\").length && input.val() !== \"\") {\n                            var max = parseFloat(input.attr(\"max\")) || 0,\n                                val = kendo.parseFloat(input.val());\n\n                            return max >= val;\n                        }\n                        return true;\n                    },\n                    step: function(input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[step]\").length && input.val() !== \"\") {\n                            var min = parseFloat(input.attr(\"min\")) || 0,\n                                step = parseFloat(input.attr(\"step\")) || 1,\n                                val = parseFloat(input.val()),\n                                decimals = numberOfDecimalDigits(step),\n                                raise;\n\n                            if (decimals) {\n                                raise = Math.pow(10, decimals);\n                                return ((Math.floor((val - min) * raise)) % (step * raise)) / Math.pow(100, decimals) === 0;\n                            }\n                            return ((val - min) % step) === 0;\n                        }\n                        return true;\n                    },\n                    email: function(input) {\n                        return matcher(input, \"[type=email],[\" + kendo.attr(\"type\") + \"=email]\", emailRegExp);\n                    },\n                    url: function(input) {\n                        return matcher(input, \"[type=url],[\" + kendo.attr(\"type\") + \"=url]\", urlRegExp);\n                    },\n                    date: function(input) {\n                        if (input.filter(\"[type^=date],[\" + kendo.attr(\"type\") + \"=date]\").length && input.val() !== \"\") {\n                            return kendo.parseDate(input.val(), input.attr(kendo.attr(\"format\"))) !== null;\n                        }\n                        return true;\n                    },\n                    captcha: function(input) {\n                        if (input.filter(\"[\" + kendo.attr(\"role\") + \"=captcha]\").length) {\n                            var that = this,\n                                captcha = kendo.widgetInstance(input),\n                                isValidated = function(isValid) {\n                                    return typeof(isValid) !== 'undefined' && isValid !== null;\n                                };\n\n                            if (!input.data(\"captcha_validating\") && !isValidated(captcha.isValid()) && !!captcha.getCaptchaId()) {\n                                input.data(\"captcha_validating\", true);\n                                that._validating = true;\n                                captcha.validate().done(function() {\n                                    that._validating = false;\n                                    that._checkElement(input);\n                                }).fail(function(data) {\n                                    that._validating = false;\n                                    if (data.error && data.error === \"handler_not_defined\") {\n                                        window.console.warn(\"Captcha's validationHandler is not defined! You should either define a proper validation endpoint or declare a callback function to ensure the required behavior.\");\n                                    }\n                                });\n                            }\n\n                            if (isValidated(captcha.isValid())) {\n                                input.removeData(\"captcha_validating\");\n                                return captcha.isValid();\n                            }\n                        }\n                        return true;\n                    }\n                },\n                validateOnBlur: true,\n                validationSummary: false\n            },\n\n            _allowSubmit: function() {\n                return kendo.ui.validator.allowSubmit(this.element, this.errors());\n            },\n\n            _validateOnInit: function() {\n                return kendo.ui.validator.validateOnInit(this.element);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.element.off(NS);\n\n                if (this.validationSummary) {\n                    this.validationSummary.off(NS);\n                    this.validationSummary = null;\n                }\n            },\n\n            value: function() {\n                if (!this._isValidated) {\n                    return false;\n                }\n\n                return this.errors().length === 0;\n            },\n\n            _submit: function(e) {\n                if ((!this.validate() && !this._allowSubmit()) || this._validating) {\n                    e.stopPropagation();\n                    e.stopImmediatePropagation();\n                    e.preventDefault();\n                    return false;\n                }\n                return true;\n            },\n\n            _checkElement: function(element) {\n                var state = this.value();\n\n                this.validateInput(element);\n\n                if (this.value() !== state) {\n                    this.trigger(CHANGE);\n                }\n            },\n\n            _attachEvents: function() {\n                var that = this;\n\n                if (that.element.is(FORM)) {\n                    that.element.on(\"submit\" + NS, that._submit.bind(that));\n                }\n\n                if (that.options.validateOnBlur) {\n                    if (!that.element.is(INPUTSELECTOR)) {\n                        that.element.on(BLUR + NS, that._inputSelector, function() {\n                            that._checkElement($(this));\n                        });\n\n                        that.element.on(\"click\" + NS, that._checkboxSelector, function() {\n                            that._checkElement($(this));\n                        });\n                    } else {\n                        that.element.on(BLUR + NS, function() {\n                            that._checkElement(that.element);\n                        });\n\n                        if (that.element.is(CHECKBOXSELECTOR)) {\n                            that.element.on(\"click\" + NS, function() {\n                                that._checkElement(that.element);\n                            });\n                        }\n                    }\n                }\n            },\n\n            validate: function() {\n                var inputs;\n                var idx;\n                var result = false;\n                var length;\n\n                var isValid = this.value();\n\n                this._errors = {};\n\n                if (!this.element.is(INPUTSELECTOR)) {\n                    var invalid = false;\n\n                    inputs = this.element.find(this._inputSelector);\n\n                    for (idx = 0, length = inputs.length; idx < length; idx++) {\n                        if (!this.validateInput(inputs.eq(idx))) {\n                            invalid = true;\n                        }\n                    }\n\n                    result = !invalid;\n                } else {\n                    result = this.validateInput(this.element);\n                }\n\n                if (this.options.validationSummary && !isValid) {\n                    this.showValidationSummary();\n                }\n\n                this.trigger(VALIDATE, { valid: result, errors: this.errors() });\n\n                if (isValid !== result) {\n                    this.trigger(CHANGE);\n                }\n\n                return result;\n            },\n\n            validateInput: function(input) {\n                input = $(input);\n\n\n                this._isValidated = true;\n\n                var that = this,\n                    template = that._errorTemplate,\n                    result = that._checkValidity(input),\n                    valid = result.valid,\n                    widgetInstance,\n                    className = \".\" + INVALIDMSG,\n                    fieldName = (input.attr(NAME) || \"\"),\n                    lbl = that._findMessageContainer(fieldName).add(input.next(className).filter(function() {\n                        var element = $(this);\n                        if (element.filter(\"[\" + kendo.attr(\"for\") + \"]\").length) {\n                            return element.attr(kendo.attr(\"for\")) === fieldName;\n                        }\n\n                        return true;\n\n                    })).addClass(\"k-hidden\"),\n                    messageText = !valid ? that._extractMessage(input, result.key) : \"\",\n                    messageLabel = !valid ? parseHtml(template({ message: decode(messageText), field: fieldName })) : \"\",\n                    wasValid = !input.attr(ARIAINVALID),\n                    isInputInner = input.is(INPUTINNER),\n                    inputWrapper = input.parent(INPUTWRAPPER);\n\n                input.removeAttr(ARIAINVALID);\n\n                if (input.hasClass(\"k-hidden\")) {\n                    widgetInstance = kendo.widgetInstance(input.closest(\".k-signature\"));\n                }\n\n                if (input.is(\"[type=radio]\")) {\n                    widgetInstance = kendo.widgetInstance(input.closest(\".k-radio-list\"));\n                }\n\n                if (input.is(\"[type=checkbox]\")) {\n                    widgetInstance = kendo.widgetInstance(input.closest(\".k-checkbox-list\"));\n                }\n\n                if (!valid && !input.data(\"captcha_validating\")) {\n                    that._errors[fieldName] = messageText;\n                    var lblId = lbl.attr('id');\n\n                    that._decorateMessageContainer(messageLabel, fieldName);\n\n\n                    if (lblId) {\n                        messageLabel.attr('id', lblId);\n                    }\n\n                    if (lbl.length !== 0) {\n                        lbl.replaceWith(messageLabel);\n                    } else {\n                        widgetInstance = widgetInstance || kendo.widgetInstance(input);\n                        var parentElement = input.parent().get(0);\n                        var nextElement = input.next().get(0);\n                        var prevElement = input.prev().get(0);\n\n                        // Get the instance of the RadioGroup which is not initialized on the input element\n                        if (!widgetInstance && input.is(\"[type=radio]\")) {\n                            widgetInstance = kendo.widgetInstance(input.closest(\".k-radio-list\"));\n                        }\n\n                        // Get the instance of the CheckBoxGroup which is not initialized on the input element\n                        if (!widgetInstance && input.is(\"[type=checkbox]\")) {\n                            widgetInstance = kendo.widgetInstance(input.closest(\".k-checkbox-list\"));\n                        }\n\n                        if (widgetInstance && widgetInstance.wrapper && (widgetInstance.element !== widgetInstance.wrapper || [\"Signature\", \"RadioGroup\", \"CheckBoxGroup\"].indexOf(widgetInstance.options.name) > -1)) {\n                            messageLabel.insertAfter(widgetInstance.wrapper);\n                        } else if (parentElement && parentElement.nodeName === \"LABEL\") {\n                            // Input inside label\n                            messageLabel.insertAfter(parentElement);\n                        } else if (nextElement && isLabelFor(nextElement, input[0])) {\n                            // Input before label\n                            messageLabel.insertAfter(nextElement);\n                        } else if (prevElement && isLabelFor(prevElement, input[0])) {\n                            // Input after label\n                            messageLabel.insertAfter(input);\n                        } else if (isInputInner && inputWrapper.length) {\n                            // Input after input wrapper\n                            messageLabel.insertAfter(inputWrapper);\n                        } else {\n                            messageLabel.insertAfter(input);\n                        }\n                    }\n\n                    messageLabel.removeClass(\"k-hidden\");\n\n                    input.attr(ARIAINVALID, true);\n                } else {\n                    delete that._errors[fieldName];\n                }\n\n                if (wasValid !== valid) {\n                    this.trigger(VALIDATE_INPUT, { valid: valid, input: input, error: messageText, field: fieldName });\n                }\n\n                widgetInstance = (widgetInstance && widgetInstance.options.name == \"Signature\") ? widgetInstance : kendo.widgetInstance(input);\n                if (!widgetInstance || !(widgetInstance._inputWrapper || widgetInstance.wrapper) || (input.is(\"[type=checkbox]\") || input.is(\"[type=radio]\"))) {\n                    input.toggleClass(INVALIDINPUT, !valid);\n                    input.toggleClass(VALIDINPUT, valid);\n                }\n\n                if (widgetInstance) {\n                    var inputWrap = widgetInstance._inputWrapper || widgetInstance.wrapper;\n                    var inputLabel = widgetInstance._inputLabel;\n\n                    if (inputWrap && !(input.is(\"[type=checkbox]\") || input.is(\"[type=radio]\"))) {\n                        inputWrap.toggleClass(INVALIDINPUT, !valid);\n                        inputWrap.toggleClass(VALIDINPUT, valid);\n                    }\n                    if (inputLabel) {\n                        inputLabel.toggleClass(INVALIDLABEL, !valid);\n                    }\n                }\n\n                if (wasValid !== valid) {\n                    var errorId = messageLabel ? messageLabel.attr(\"id\") : lbl.attr(\"id\");\n\n                    that._associateMessageContainer(input, errorId);\n\n                    if (this.options.validationSummary && this.options.validateOnBlur) {\n                        this.showValidationSummary();\n                    }\n                }\n\n                return valid;\n            },\n\n            hideMessages: function() {\n                var that = this,\n                    className = \".\" + INVALIDMSG,\n                    element = that.element;\n\n                that._disassociateMessageContainers();\n\n                if (!element.is(INPUTSELECTOR)) {\n                    element.find(className).addClass(\"k-hidden\");\n                } else {\n                    element.next(className).addClass(\"k-hidden\");\n                }\n            },\n\n            reset: function() {\n                var that = this,\n                    inputs = that.element.find(\".\" + INVALIDINPUT),\n                    labels = that.element.find(\".\" + INVALIDLABEL);\n\n                that._errors = [];\n\n                that.hideMessages();\n\n                that.hideValidationSummary();\n\n                inputs.removeAttr(ARIAINVALID);\n                inputs.removeClass(INVALIDINPUT);\n                labels.removeClass(INVALIDLABEL);\n            },\n\n            _findMessageContainer: function(fieldName) {\n                var locators = kendo.ui.validator.messageLocators,\n                    name,\n                    containers = $();\n\n                for (var idx = 0, length = this.element.length; idx < length; idx++) {\n                    containers = containers.add(searchForMessageContainer(this.element[idx].getElementsByTagName(\"*\"), fieldName));\n                }\n\n                for (name in locators) {\n                    containers = containers.add(locators[name].locate(this.element, fieldName));\n                }\n\n                return containers;\n            },\n\n            _decorateMessageContainer: function(container, fieldName) {\n                var locators = kendo.ui.validator.messageLocators,\n                    name;\n\n                container.addClass(INVALIDMSG)\n                    .attr(kendo.attr(\"for\"), fieldName || \"\");\n\n                if (!container.attr(\"id\")) {\n                    container.attr(\"id\", fieldName + \"-error\");\n                }\n\n                for (name in locators) {\n                    locators[name].decorate(container, fieldName);\n                }\n            },\n\n            _extractMessage: function(input, ruleKey) {\n                var that = this,\n                    customMessage = that.options.messages[ruleKey],\n                    fieldName = input.attr(NAME),\n                    nonDefaultMessage;\n\n                if (!kendo.ui.Validator.prototype.options.messages[ruleKey]) {\n                     nonDefaultMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n                }\n\n                customMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n\n                return kendo.format(input.attr(kendo.attr(ruleKey + \"-msg\")) || input.attr(\"validationMessage\") || nonDefaultMessage || customMessage || input.attr(\"title\") || \"\",\n                    fieldName,\n                    input.attr(ruleKey) || input.attr(kendo.attr(ruleKey)));\n            },\n\n            _checkValidity: function(input) {\n                var rules = this.options.rules,\n                    rule;\n\n                for (rule in rules) {\n                    if (!rules[rule].call(this, input)) {\n                        return { valid: false, key: rule };\n                    }\n                }\n\n                return { valid: true };\n            },\n\n            errors: function() {\n                var results = [],\n                    errors = this._errors,\n                    error;\n\n                for (error in errors) {\n                    results.push(errors[error]);\n                }\n                return results;\n            },\n\n            setOptions: function(options) {\n                if (options.validationSummary) {\n                    this.hideValidationSummary();\n                }\n\n                kendo.deepExtend(this.options, options);\n\n                this.destroy();\n\n                this.init(this.element, this.options);\n\n                this._setEvents(this.options);\n            },\n\n            _getInputNames: function() {\n                var that = this,\n                    inputs = that.element.find(that._inputSelector),\n                    sorted = [];\n\n                for (var idx = 0, length = inputs.length; idx < length; idx++) {\n                    var input = $(inputs[idx]);\n\n                    if (hasAttribute(input, NAME)) {\n                        // Add current name if:\n                        // - not present so far;\n                        // - present but not part of CheckBoxGroup or RadioGroup.\n                        if (sorted.indexOf(input.attr(NAME)) === -1 ||\n                            (input.closest(\".k-checkbox-list\").length === 0 &&\n                            input.closest(\".k-radio-list\").length === 0)) {\n                                sorted.push(input.attr(NAME));\n                        }\n                    }\n                }\n\n                return sorted;\n            },\n\n            _associateMessageContainer: function(input, errorId) {\n                var nextFocusable = kendo.getWidgetFocusableElement(input);\n\n                if (!nextFocusable || !errorId) {\n                    return;\n                }\n\n                kendo.toggleAttribute(nextFocusable, ARIADESCRIBEDBY, errorId);\n            },\n\n            _disassociateMessageContainers: function() {\n                var that = this,\n                    inputs = that.element.find(\".\" + INVALIDINPUT).addBack(),\n                    input, errorId;\n\n                for (var i = 0; i < inputs.length; i += 1) {\n                    input = $(inputs[i]);\n\n                    if (input.is(\"input\")) {\n                        errorId = that._findMessageContainer(input.attr(NAME))\n                            .add(input.next(\".\" + INVALIDMSG))\n                            .attr(\"id\");\n\n                        that._associateMessageContainer(input, errorId);\n                    }\n                }\n            },\n\n            _errorsByName: function() {\n                var that = this,\n                    inputNames = that._getInputNames(),\n                    sorted = [];\n\n                for (var i = 0; i < inputNames.length; i += 1) {\n                    var name = inputNames[i];\n\n                    if (that._errors[name]) {\n                        sorted.push({\n                            field: name,\n                            message: that._errors[name]\n                        });\n                    }\n                }\n\n                return sorted;\n            },\n\n            _renderSummary: function() {\n                var that = this,\n                    options = this.options.validationSummary,\n                    element = this.element,\n                    prevElement = element.prev(),\n                    container;\n\n                if (options.container) {\n                    container = $(options.container);\n                } else if (prevElement && prevElement.hasClass(VALIDATIONSUMMARY)) {\n                    container = prevElement;\n                } else {\n                    container = $(\"<div />\").insertBefore(that.element);\n                }\n\n                container.addClass([VALIDATIONSUMMARY, MESSAGEBOX].join(\" \"));\n                container.attr(\"role\", \"alert\");\n\n                container.on(\"click\" + NS, that._summaryClick.bind(that));\n\n                return container;\n            },\n\n            _summaryClick: function(e) {\n                e.preventDefault();\n\n                var that = this,\n                    link = $(e.target),\n                    target = that.element.find(\"[name='\" + link.data(\"field\") + \"']\"),\n                    nextFocusable;\n\n                if (!target.length) {\n                    return;\n                }\n\n                nextFocusable = kendo.getWidgetFocusableElement(target);\n\n                if (nextFocusable) {\n                    nextFocusable.trigger(\"focus\");\n                }\n            },\n\n            showValidationSummary: function() {\n                var that = this,\n                    summary = that.validationSummary,\n                    errors = that._errorsByName(),\n                    errorsList;\n\n                if (!summary) {\n                    summary = that.validationSummary = that._renderSummary();\n                }\n\n                errorsList = parseHtml(that._summaryTemplate({\n                    errors: errors\n                }));\n\n                summary.html(errorsList);\n\n                summary.toggleClass(\"k-hidden\", !errors.length);\n            },\n\n            hideValidationSummary: function() {\n                var that = this,\n                    summary = that.validationSummary;\n\n                if (!summary) {\n                    return;\n                }\n\n                summary.addClass(\"k-hidden\");\n            }\n        });\n\n        kendo.ui.plugin(Validator);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}